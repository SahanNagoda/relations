/* eslint-disable @typescript-eslint/no-unused-vars */import{AppError,flat}from"adminjs";import{Messages}from"../constants/messages.js";import{RelationType}from"../types/index.js";import{manyToManyHandler}from"./many-to-many/many-to-many.handler.js";import{oneToManyHandler}from"./one-to-many/one-to-many.handler.js";export const findRelationHandler=a=>async(b,c,d)=>{const{relations:e}=a,{resource:f,_admin:g}=d,{query:h}=b,{recordId:i}=b.params;if(!i)throw new AppError(Messages.MissingRecordId);const j=flat.unflatten(h||{}),{relation:k}=j,l=e[k];if(!l)throw new AppError(Messages.MissingConfiguration,void 0,{options:{relationName:k}});const m=g.findResource(l.target.resourceId);if(l.type===RelationType.OneToMany)return oneToManyHandler(i,{targetResource:m,ownerResource:f,relation:l},j,d);if(l.type===RelationType.ManyToMany)return manyToManyHandler(i,{targetResource:m,ownerResource:f,relation:l},j,d);throw new AppError(Messages.InvalidRelationType,void 0,{options:{validTypes:Object.values(RelationType).join(", ")}})};